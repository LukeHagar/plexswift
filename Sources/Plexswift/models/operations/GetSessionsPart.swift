// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetSessionsPart {
        public let container: String?
        public let decision: String?
        public let duration: Int?
        public let file: String?
        public let hasThumbnail: String?
        public let id: String?
        public let key: String?
        public let selected: Bool?
        public let size: Int?
        public let stream: [Operations.GetSessionsStream]?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(container: String? = nil, decision: String? = nil, duration: Int? = nil, file: String? = nil, hasThumbnail: String? = nil, id: String? = nil, key: String? = nil, selected: Bool? = nil, size: Int? = nil, stream: [Operations.GetSessionsStream]? = nil) {
            self.container = container
            self.decision = decision
            self.duration = duration
            self.file = file
            self.hasThumbnail = hasThumbnail
            self.id = id
            self.key = key
            self.selected = selected
            self.size = size
            self.stream = stream
        }
    }
}

extension Operations.GetSessionsPart: Codable {
    enum CodingKeys: String, CodingKey {
        case container
        case decision
        case duration
        case file
        case hasThumbnail
        case id
        case key
        case selected
        case size
        case stream = "Stream"
    }
}

