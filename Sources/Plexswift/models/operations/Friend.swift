// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct Friend {
        /// The account email address
        public let email: String
        /// The account full name
        public let friendlyName: String
        /// If the account is a Plex Home user
        public let home: Bool
        /// The Plex account ID
        public let id: Int
        /// If the account is a Plex Home managed user
        public let restricted: Bool
        public let sharedServers: [Operations.SharedServers]
        public let sharedSources: [Operations.SharedSources]
        /// Current friend request status
        public let status: Operations.Status
        /// URL of the account thumbnail
        public let thumb: String
        /// The title of the account (username or friendly name)
        public let title: String
        /// The account username
        public let username: String
        /// The account Universally Unique Identifier (UUID)
        public let uuid: String

        /// Creates an object with the specified parameters
        ///
        /// - Parameter email: The account email address
        /// - Parameter friendlyName: The account full name
        /// - Parameter home: If the account is a Plex Home user
        /// - Parameter id: The Plex account ID
        /// - Parameter restricted: If the account is a Plex Home managed user
        /// - Parameter status: Current friend request status
        /// - Parameter thumb: URL of the account thumbnail
        /// - Parameter title: The title of the account (username or friendly name)
        /// - Parameter username: The account username
        /// - Parameter uuid: The account Universally Unique Identifier (UUID)
        ///
        public init(email: String, friendlyName: String, home: Bool, id: Int, restricted: Bool, sharedServers: [Operations.SharedServers], sharedSources: [Operations.SharedSources], status: Operations.Status, thumb: String, title: String, username: String, uuid: String) {
            self.email = email
            self.friendlyName = friendlyName
            self.home = home
            self.id = id
            self.restricted = restricted
            self.sharedServers = sharedServers
            self.sharedSources = sharedSources
            self.status = status
            self.thumb = thumb
            self.title = title
            self.username = username
            self.uuid = uuid
        }
    }}

extension Operations.Friend: Codable {
    enum CodingKeys: String, CodingKey {
        case email
        case friendlyName
        case home
        case id
        case restricted
        case sharedServers
        case sharedSources
        case status
        case thumb
        case title
        case username
        case uuid
    }
}

