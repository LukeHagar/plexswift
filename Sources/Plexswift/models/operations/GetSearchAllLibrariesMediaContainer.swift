// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetSearchAllLibrariesMediaContainer {
        public let searchResult: [Operations.SearchResult]
        @DecimalSerialized
        public private(set) var size: Double

        /// Creates an object with the specified parameters
        ///
        ///
        public init(searchResult: [Operations.SearchResult], size: Double) {
            self.searchResult = searchResult
            self._size = DecimalSerialized<Double>(wrappedValue: size)
        }
    }}

extension Operations.GetSearchAllLibrariesMediaContainer: Codable {
    enum CodingKeys: String, CodingKey {
        case searchResult = "SearchResult"
        case size
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.searchResult = try container.decode([Operations.SearchResult].self, forKey: .searchResult)
        self._size = try container.decode(DecimalSerialized<Double>.self, forKey: .size)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(self.searchResult, forKey: .searchResult)
        try container.encode(self._size, forKey: .size)
    }
}

extension Operations.GetSearchAllLibrariesMediaContainer {
    var sizeWrapper: DecimalSerialized<Double> {
        return _size
    }
}
