// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetLibrariesDirectory {
        public let agent: String?
        public let allowSync: Bool?
        public let art: String?
        public let composite: String?
        public let content: Bool?
        public let contentChangedAt: Int?
        public let createdAt: Int?
        public let directory: Bool?
        public let filters: Bool?
        public let hidden: Int?
        public let key: String?
        public let language: String?
        public let location: [Operations.Location]?
        public let refreshing: Bool?
        public let scannedAt: Int?
        public let scanner: String?
        public let thumb: String?
        public let title: String?
        public let type: String?
        public let updatedAt: Int?
        public let uuid: String?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(agent: String? = nil, allowSync: Bool? = nil, art: String? = nil, composite: String? = nil, content: Bool? = nil, contentChangedAt: Int? = nil, createdAt: Int? = nil, directory: Bool? = nil, filters: Bool? = nil, hidden: Int? = nil, key: String? = nil, language: String? = nil, location: [Operations.Location]? = nil, refreshing: Bool? = nil, scannedAt: Int? = nil, scanner: String? = nil, thumb: String? = nil, title: String? = nil, type: String? = nil, updatedAt: Int? = nil, uuid: String? = nil) {
            self.agent = agent
            self.allowSync = allowSync
            self.art = art
            self.composite = composite
            self.content = content
            self.contentChangedAt = contentChangedAt
            self.createdAt = createdAt
            self.directory = directory
            self.filters = filters
            self.hidden = hidden
            self.key = key
            self.language = language
            self.location = location
            self.refreshing = refreshing
            self.scannedAt = scannedAt
            self.scanner = scanner
            self.thumb = thumb
            self.title = title
            self.type = type
            self.updatedAt = updatedAt
            self.uuid = uuid
        }
    }
}

extension Operations.GetLibrariesDirectory: Codable {
    enum CodingKeys: String, CodingKey {
        case agent
        case allowSync
        case art
        case composite
        case content
        case contentChangedAt
        case createdAt
        case directory
        case filters
        case hidden
        case key
        case language
        case location = "Location"
        case refreshing
        case scannedAt
        case scanner
        case thumb
        case title
        case type
        case updatedAt
        case uuid
    }
}

