// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetTokenLocation {
        public let city: String?
        public let code: String?
        public let continentCode: String?
        public let coordinates: String?
        public let country: String?
        public let europeanUnionMember: Bool?
        public let inPrivacyRestrictedCountry: Bool?
        public let postalCode: String?
        public let subdivisions: String?
        public let timeZone: String?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(city: String? = nil, code: String? = nil, continentCode: String? = nil, coordinates: String? = nil, country: String? = nil, europeanUnionMember: Bool? = nil, inPrivacyRestrictedCountry: Bool? = nil, postalCode: String? = nil, subdivisions: String? = nil, timeZone: String? = nil) {
            self.city = city
            self.code = code
            self.continentCode = continentCode
            self.coordinates = coordinates
            self.country = country
            self.europeanUnionMember = europeanUnionMember
            self.inPrivacyRestrictedCountry = inPrivacyRestrictedCountry
            self.postalCode = postalCode
            self.subdivisions = subdivisions
            self.timeZone = timeZone
        }
    }
}

extension Operations.GetTokenLocation: Codable {
    enum CodingKeys: String, CodingKey {
        case city
        case code
        case continentCode = "continent_code"
        case coordinates
        case country
        case europeanUnionMember = "european_union_member"
        case inPrivacyRestrictedCountry = "in_privacy_restricted_country"
        case postalCode = "postal_code"
        case subdivisions
        case timeZone = "time_zone"
    }
}

