// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct PerformSearchRequest: APIValue {
        /// The query term
        public let query: String
        /// The number of items to return per hub
        @DecimalSerialized
        public private(set) var limit: Double?
        /// This gives context to the search, and can result in re-ordering of search result hubs
        @DecimalSerialized
        public private(set) var sectionId: Double?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter query: The query term
        /// - Parameter limit: The number of items to return per hub
        /// - Parameter sectionId: This gives context to the search, and can result in re-ordering of search result hubs
        ///
        public init(query: String, limit: Double? = nil, sectionId: Double? = nil) {
            self.query = query
            self._limit = DecimalSerialized<Double?>(wrappedValue: limit)
            self._sectionId = DecimalSerialized<Double?>(wrappedValue: sectionId)
        }
    }
}
extension Operations.PerformSearchRequest {
    var sectionIdWrapper: DecimalSerialized<Double?> {
        return _sectionId
    }
    var limitWrapper: DecimalSerialized<Double?> {
        return _limit
    }
}
