// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.


import Foundation

extension Operations.PostUsersSignInDataRequestBody: Serializable {
    func serialize(with format: SerializableFormat) throws -> String {
        switch format {
        case .form:
            return serializeModel(with: try serializedFormParameters(formatOverride: format), format: format)
        case .path, .query, .header, .multipart:
            throw SerializationError.invalidSerializationParameter(type: "Operations.PostUsersSignInDataRequestBody", format: format.formatDescription)
        }
    }
}

extension Operations.PostUsersSignInDataRequestBody: FormBodySerializable {
    func serializedFormParameters(formatOverride: SerializableFormat?) throws -> [SerializedParameter] {
        return [
            SerializedParameter(name: "login", serialized: try login.serialize(with: .form(explode: true))),
            SerializedParameter(name: "password", serialized: try password.serialize(with: .form(explode: true))),
            SerializedParameter(name: "rememberMe", serialized: try rememberMe?.serialize(with: .form(explode: true))),
            SerializedParameter(name: "verificationCode", serialized: try verificationCode?.serialize(with: .form(explode: true)))
        ]
    }
}
