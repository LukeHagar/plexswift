// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct Connections {
        /// The (ip) address or domain name used for the connection
        public let address: String
        /// If the connection is using IPv6
        public let iPv6: Bool
        /// If the connection is local address
        public let local: Bool
        /// The port used for the connection
        public let port: Int
        /// The protocol used for the connection (http, https, etc)
        public let `protocol`: Operations.`Protocol`
        /// If the connection is relayed through plex.direct
        public let relay: Bool
        /// The full URI of the connection
        public let uri: String

        /// Creates an object with the specified parameters
        ///
        /// - Parameter address: The (ip) address or domain name used for the connection
        /// - Parameter iPv6: If the connection is using IPv6
        /// - Parameter local: If the connection is local address
        /// - Parameter port: The port used for the connection
        /// - Parameter `protocol`: The protocol used for the connection (http, https, etc)
        /// - Parameter relay: If the connection is relayed through plex.direct
        /// - Parameter uri: The full URI of the connection
        ///
        public init(address: String, iPv6: Bool, local: Bool, port: Int, `protocol`: Operations.`Protocol`, relay: Bool, uri: String) {
            self.address = address
            self.iPv6 = iPv6
            self.local = local
            self.port = port
            self.`protocol` = `protocol`
            self.relay = relay
            self.uri = uri
        }
    }}

extension Operations.Connections: Codable {
    enum CodingKeys: String, CodingKey {
        case address
        case iPv6 = "IPv6"
        case local
        case port
        case `protocol` = "protocol"
        case relay
        case uri
    }
}

