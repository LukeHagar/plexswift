// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetTimelineRequest: APIValue {
        /// The context of the media item
        public let context: String
        /// The duration of the media item
        @DecimalSerialized
        public private(set) var duration: Double
        /// Whether the media item has MDE
        @DecimalSerialized
        public private(set) var hasMDE: Double
        /// The key of the media item to get the timeline for
        public let key: String
        /// The playback time of the media item
        @DecimalSerialized
        public private(set) var playBackTime: Double
        /// The play queue item ID of the media item
        @DecimalSerialized
        public private(set) var playQueueItemID: Double
        /// The rating key of the media item
        @DecimalSerialized
        public private(set) var ratingKey: Double
        /// The row of the media item
        @DecimalSerialized
        public private(set) var row: Double
        /// The state of the media item
        public let state: Operations.State
        /// The time of the media item
        @DecimalSerialized
        public private(set) var time: Double

        /// Creates an object with the specified parameters
        ///
        /// - Parameter context: The context of the media item
        /// - Parameter duration: The duration of the media item
        /// - Parameter hasMDE: Whether the media item has MDE
        /// - Parameter key: The key of the media item to get the timeline for
        /// - Parameter playBackTime: The playback time of the media item
        /// - Parameter playQueueItemID: The play queue item ID of the media item
        /// - Parameter ratingKey: The rating key of the media item
        /// - Parameter row: The row of the media item
        /// - Parameter state: The state of the media item
        /// - Parameter time: The time of the media item
        ///
        public init(context: String, duration: Double, hasMDE: Double, key: String, playBackTime: Double, playQueueItemID: Double, ratingKey: Double, row: Double, state: Operations.State, time: Double) {
            self.context = context
            self._duration = DecimalSerialized<Double>(wrappedValue: duration)
            self._hasMDE = DecimalSerialized<Double>(wrappedValue: hasMDE)
            self.key = key
            self._playBackTime = DecimalSerialized<Double>(wrappedValue: playBackTime)
            self._playQueueItemID = DecimalSerialized<Double>(wrappedValue: playQueueItemID)
            self._ratingKey = DecimalSerialized<Double>(wrappedValue: ratingKey)
            self._row = DecimalSerialized<Double>(wrappedValue: row)
            self.state = state
            self._time = DecimalSerialized<Double>(wrappedValue: time)
        }
    }
}
extension Operations.GetTimelineRequest {
    var ratingKeyWrapper: DecimalSerialized<Double> {
        return _ratingKey
    }
    var hasMDEWrapper: DecimalSerialized<Double> {
        return _hasMDE
    }
    var timeWrapper: DecimalSerialized<Double> {
        return _time
    }
    var durationWrapper: DecimalSerialized<Double> {
        return _duration
    }
    var playQueueItemIDWrapper: DecimalSerialized<Double> {
        return _playQueueItemID
    }
    var playBackTimeWrapper: DecimalSerialized<Double> {
        return _playBackTime
    }
    var rowWrapper: DecimalSerialized<Double> {
        return _row
    }
}
