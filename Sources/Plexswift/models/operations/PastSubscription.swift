// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct PastSubscription {
        public let billing: Operations.Billing
        public let canceled: Bool
        public let canConvert: Bool
        public let canDowngrade: Bool
        public let canReactivate: Bool
        public let canUpgrade: Bool
        public let endsAt: Int
        public let gracePeriod: Bool
        public let id: String
        public let mode: String
        public let onHold: Bool
        public let renewsAt: Int
        public let state: Operations.PostUsersSignInDataState
        public let transfer: String
        public let type: String

        /// Creates an object with the specified parameters
        ///
        ///
        public init(billing: Operations.Billing, canceled: Bool, canConvert: Bool, canDowngrade: Bool, canReactivate: Bool, canUpgrade: Bool, endsAt: Int, gracePeriod: Bool, id: String, mode: String, onHold: Bool, renewsAt: Int, state: Operations.PostUsersSignInDataState, transfer: String, type: String) {
            self.billing = billing
            self.canceled = canceled
            self.canConvert = canConvert
            self.canDowngrade = canDowngrade
            self.canReactivate = canReactivate
            self.canUpgrade = canUpgrade
            self.endsAt = endsAt
            self.gracePeriod = gracePeriod
            self.id = id
            self.mode = mode
            self.onHold = onHold
            self.renewsAt = renewsAt
            self.state = state
            self.transfer = transfer
            self.type = type
        }
    }}

extension Operations.PastSubscription: Codable {
    enum CodingKeys: String, CodingKey {
        case billing
        case canceled
        case canConvert
        case canDowngrade
        case canReactivate
        case canUpgrade
        case endsAt
        case gracePeriod
        case id
        case mode
        case onHold
        case renewsAt
        case state
        case transfer
        case type
    }
}

