// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetPlaylistContentsMediaContainer {
        public let composite: String?
        public let duration: Int?
        public let leafCount: Int?
        public let metadata: [Operations.GetPlaylistContentsMetadata]?
        public let playlistType: String?
        public let ratingKey: String?
        public let size: Int?
        public let smart: Bool?
        public let title: String?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(composite: String? = nil, duration: Int? = nil, leafCount: Int? = nil, metadata: [Operations.GetPlaylistContentsMetadata]? = nil, playlistType: String? = nil, ratingKey: String? = nil, size: Int? = nil, smart: Bool? = nil, title: String? = nil) {
            self.composite = composite
            self.duration = duration
            self.leafCount = leafCount
            self.metadata = metadata
            self.playlistType = playlistType
            self.ratingKey = ratingKey
            self.size = size
            self.smart = smart
            self.title = title
        }
    }}

extension Operations.GetPlaylistContentsMediaContainer: Codable {
    enum CodingKeys: String, CodingKey {
        case composite
        case duration
        case leafCount
        case metadata = "Metadata"
        case playlistType
        case ratingKey
        case size
        case smart
        case title
    }
}

