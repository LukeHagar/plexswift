// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetMediaProvidersMediaContainer {
        public let allowCameraUpload: Bool?
        public let allowChannelAccess: Bool?
        public let allowSharing: Bool?
        public let allowSync: Bool?
        public let allowTuners: Bool?
        public let backgroundProcessing: Bool?
        public let certificate: Bool?
        public let companionProxy: Bool?
        public let countryCode: String?
        public let diagnostics: String?
        public let eventStream: Bool?
        public let friendlyName: String?
        public let livetv: Int?
        public let machineIdentifier: String?
        public let mediaProvider: [Operations.MediaProvider]?
        public let musicAnalysis: Int?
        public let myPlex: Bool?
        public let myPlexMappingState: String?
        public let myPlexSigninState: String?
        public let myPlexSubscription: Bool?
        public let myPlexUsername: String?
        public let offlineTranscode: Int?
        public let ownerFeatures: String?
        public let platform: String?
        public let platformVersion: String?
        public let pluginHost: Bool?
        public let pushNotifications: Bool?
        public let readOnlyLibraries: Bool?
        public let size: Int?
        public let streamingBrainABRVersion: Int?
        public let streamingBrainVersion: Int?
        public let sync: Bool?
        public let transcoderActiveVideoSessions: Int?
        public let transcoderAudio: Bool?
        public let transcoderLyrics: Bool?
        public let transcoderSubtitles: Bool?
        public let transcoderVideo: Bool?
        public let transcoderVideoBitrates: String?
        public let transcoderVideoQualities: String?
        public let transcoderVideoResolutions: String?
        public let updatedAt: Int?
        public let updater: Bool?
        public let version: String?
        public let voiceSearch: Bool?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(allowCameraUpload: Bool? = nil, allowChannelAccess: Bool? = nil, allowSharing: Bool? = nil, allowSync: Bool? = nil, allowTuners: Bool? = nil, backgroundProcessing: Bool? = nil, certificate: Bool? = nil, companionProxy: Bool? = nil, countryCode: String? = nil, diagnostics: String? = nil, eventStream: Bool? = nil, friendlyName: String? = nil, livetv: Int? = nil, machineIdentifier: String? = nil, mediaProvider: [Operations.MediaProvider]? = nil, musicAnalysis: Int? = nil, myPlex: Bool? = nil, myPlexMappingState: String? = nil, myPlexSigninState: String? = nil, myPlexSubscription: Bool? = nil, myPlexUsername: String? = nil, offlineTranscode: Int? = nil, ownerFeatures: String? = nil, platform: String? = nil, platformVersion: String? = nil, pluginHost: Bool? = nil, pushNotifications: Bool? = nil, readOnlyLibraries: Bool? = nil, size: Int? = nil, streamingBrainABRVersion: Int? = nil, streamingBrainVersion: Int? = nil, sync: Bool? = nil, transcoderActiveVideoSessions: Int? = nil, transcoderAudio: Bool? = nil, transcoderLyrics: Bool? = nil, transcoderSubtitles: Bool? = nil, transcoderVideo: Bool? = nil, transcoderVideoBitrates: String? = nil, transcoderVideoQualities: String? = nil, transcoderVideoResolutions: String? = nil, updatedAt: Int? = nil, updater: Bool? = nil, version: String? = nil, voiceSearch: Bool? = nil) {
            self.allowCameraUpload = allowCameraUpload
            self.allowChannelAccess = allowChannelAccess
            self.allowSharing = allowSharing
            self.allowSync = allowSync
            self.allowTuners = allowTuners
            self.backgroundProcessing = backgroundProcessing
            self.certificate = certificate
            self.companionProxy = companionProxy
            self.countryCode = countryCode
            self.diagnostics = diagnostics
            self.eventStream = eventStream
            self.friendlyName = friendlyName
            self.livetv = livetv
            self.machineIdentifier = machineIdentifier
            self.mediaProvider = mediaProvider
            self.musicAnalysis = musicAnalysis
            self.myPlex = myPlex
            self.myPlexMappingState = myPlexMappingState
            self.myPlexSigninState = myPlexSigninState
            self.myPlexSubscription = myPlexSubscription
            self.myPlexUsername = myPlexUsername
            self.offlineTranscode = offlineTranscode
            self.ownerFeatures = ownerFeatures
            self.platform = platform
            self.platformVersion = platformVersion
            self.pluginHost = pluginHost
            self.pushNotifications = pushNotifications
            self.readOnlyLibraries = readOnlyLibraries
            self.size = size
            self.streamingBrainABRVersion = streamingBrainABRVersion
            self.streamingBrainVersion = streamingBrainVersion
            self.sync = sync
            self.transcoderActiveVideoSessions = transcoderActiveVideoSessions
            self.transcoderAudio = transcoderAudio
            self.transcoderLyrics = transcoderLyrics
            self.transcoderSubtitles = transcoderSubtitles
            self.transcoderVideo = transcoderVideo
            self.transcoderVideoBitrates = transcoderVideoBitrates
            self.transcoderVideoQualities = transcoderVideoQualities
            self.transcoderVideoResolutions = transcoderVideoResolutions
            self.updatedAt = updatedAt
            self.updater = updater
            self.version = version
            self.voiceSearch = voiceSearch
        }
    }}

extension Operations.GetMediaProvidersMediaContainer: Codable {
    enum CodingKeys: String, CodingKey {
        case allowCameraUpload
        case allowChannelAccess
        case allowSharing
        case allowSync
        case allowTuners
        case backgroundProcessing
        case certificate
        case companionProxy
        case countryCode
        case diagnostics
        case eventStream
        case friendlyName
        case livetv
        case machineIdentifier
        case mediaProvider = "MediaProvider"
        case musicAnalysis
        case myPlex
        case myPlexMappingState
        case myPlexSigninState
        case myPlexSubscription
        case myPlexUsername
        case offlineTranscode
        case ownerFeatures
        case platform
        case platformVersion
        case pluginHost
        case pushNotifications
        case readOnlyLibraries
        case size
        case streamingBrainABRVersion
        case streamingBrainVersion
        case sync
        case transcoderActiveVideoSessions
        case transcoderAudio
        case transcoderLyrics
        case transcoderSubtitles
        case transcoderVideo
        case transcoderVideoBitrates
        case transcoderVideoQualities
        case transcoderVideoResolutions
        case updatedAt
        case updater
        case version
        case voiceSearch
    }
}

