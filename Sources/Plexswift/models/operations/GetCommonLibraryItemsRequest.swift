// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetCommonLibraryItemsRequest: APIValue {
        /// the Id of the library to query
        @DecimalSerialized
        public private(set) var sectionId: Double
        /// item type
        @DecimalSerialized
        public private(set) var type: Double
        /// the filter parameter
        public let filter: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter sectionId: the Id of the library to query
        /// - Parameter type: item type
        /// - Parameter filter: the filter parameter
        ///
        public init(sectionId: Double, type: Double, filter: String? = nil) {
            self._sectionId = DecimalSerialized<Double>(wrappedValue: sectionId)
            self._type = DecimalSerialized<Double>(wrappedValue: type)
            self.filter = filter
        }
    }
}
extension Operations.GetCommonLibraryItemsRequest {
    var sectionIdWrapper: DecimalSerialized<Double> {
        return _sectionId
    }
    var typeWrapper: DecimalSerialized<Double> {
        return _type
    }
}
