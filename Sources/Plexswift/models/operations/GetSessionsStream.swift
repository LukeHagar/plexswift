// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetSessionsStream {
        public let albumGain: String?
        public let albumPeak: String?
        public let albumRange: String?
        public let audioChannelLayout: String?
        public let bitDepth: Int?
        public let bitrate: Int?
        public let channels: Int?
        public let codec: String?
        public let displayTitle: String?
        public let extendedDisplayTitle: String?
        public let gain: String?
        public let id: String?
        public let index: Int?
        public let location: String?
        public let loudness: String?
        public let lra: String?
        public let peak: String?
        public let samplingRate: Int?
        public let selected: Bool?
        public let streamType: Int?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(albumGain: String? = nil, albumPeak: String? = nil, albumRange: String? = nil, audioChannelLayout: String? = nil, bitDepth: Int? = nil, bitrate: Int? = nil, channels: Int? = nil, codec: String? = nil, displayTitle: String? = nil, extendedDisplayTitle: String? = nil, gain: String? = nil, id: String? = nil, index: Int? = nil, location: String? = nil, loudness: String? = nil, lra: String? = nil, peak: String? = nil, samplingRate: Int? = nil, selected: Bool? = nil, streamType: Int? = nil) {
            self.albumGain = albumGain
            self.albumPeak = albumPeak
            self.albumRange = albumRange
            self.audioChannelLayout = audioChannelLayout
            self.bitDepth = bitDepth
            self.bitrate = bitrate
            self.channels = channels
            self.codec = codec
            self.displayTitle = displayTitle
            self.extendedDisplayTitle = extendedDisplayTitle
            self.gain = gain
            self.id = id
            self.index = index
            self.location = location
            self.loudness = loudness
            self.lra = lra
            self.peak = peak
            self.samplingRate = samplingRate
            self.selected = selected
            self.streamType = streamType
        }
    }}

extension Operations.GetSessionsStream: Codable {
    enum CodingKeys: String, CodingKey {
        case albumGain
        case albumPeak
        case albumRange
        case audioChannelLayout
        case bitDepth
        case bitrate
        case channels
        case codec
        case displayTitle
        case extendedDisplayTitle
        case gain
        case id
        case index
        case location
        case loudness
        case lra
        case peak
        case samplingRate
        case selected
        case streamType
    }
}

