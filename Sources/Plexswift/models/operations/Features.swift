// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    public enum Features: String, Codable, APIValue {
        case androidDolbyVision = "Android - Dolby Vision"
        case androidPiP = "Android - PiP"
        case cuSunset = "CU Sunset"
        case hrkEnableEur = "HRK_enable_EUR"
        case trebleShowFeatures = "TREBLE-show-features"
        case adCountdownTimer = "ad-countdown-timer"
        case adaptiveBitrate = "adaptive_bitrate"
        case amazonLoopDebug = "amazon-loop-debug"
        case avodAdAnalysis = "avod-ad-analysis"
        case avodNewMedia = "avod-new-media"
        case blacklistGetSignin = "blacklist_get_signin"
        case clientRadioStations = "client-radio-stations"
        case cloudflareTurnstileRequired = "cloudflare-turnstile-required"
        case collections = "collections"
        case commentsAndRepliesPushNotifications = "comments_and_replies_push_notifications"
        case communityAccessPlexTv = "community_access_plex_tv"
        case companionsSonos = "companions_sonos"
        case customHomeRemoval = "custom-home-removal"
        case disableHomeUserFriendships = "disable_home_user_friendships"
        case disableSharingFriendships = "disable_sharing_friendships"
        case drmSupport = "drm_support"
        case excludeRestrictions = "exclude restrictions"
        case federatedAuth = "federated-auth"
        case friendRequestPushNotifications = "friend_request_push_notifications"
        case guidedUpgrade = "guided-upgrade"
        case home = "home"
        case increasePasswordComplexity = "increase-password-complexity"
        case ios14PrivacyBanner = "ios14-privacy-banner"
        case iterableNotificationTokens = "iterable-notification-tokens"
        case keepPaymentMethod = "keep-payment-method"
        case kevinBacon = "kevin-bacon"
        case koreaConsent = "korea-consent"
        case leIsrgRootX1 = "le_isrg_root_x1"
        case letsEncrypt = "lets_encrypt"
        case lightningDvrPivot = "lightning-dvr-pivot"
        case liveTvSupportIncompleteSegments = "live-tv-support-incomplete-segments"
        case livetv = "livetv"
        case metadataSearch = "metadata_search"
        case newPlexPassPrices = "new_plex_pass_prices"
        case newsProviderSunsetModal = "news-provider-sunset-modal"
        case photosFavorites = "photos-favorites"
        case photosMetadataEdition = "photos-metadata-edition"
        case pmsHealth = "pms_health"
        case radio = "radio"
        case rateLimitClientToken = "rate-limit-client-token"
        case scrobblingServicePlexTv = "scrobbling-service-plex-tv"
        case sharedServerNotification = "shared_server_notification"
        case sharedSourceNotification = "shared_source_notification"
        case signinWithApple = "signin_with_apple"
        case springServeAdProvider = "spring_serve_ad_provider"
        case transcoderCache = "transcoder_cache"
        case tunerSharing = "tuner-sharing"
        case twoFactorAuthentication = "two-factor-authentication"
        case unsupportedtuners = "unsupportedtuners"
        case upgrade3Ds2 = "upgrade-3ds2"
        case vodSchema = "vod-schema"
        case vodCloudflare = "vod_cloudflare"
        case watchTogetherInvite = "watch-together-invite"
        case webServerDashboard = "web_server_dashboard"
    }}
