// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetActorsLibraryMediaContainer {
        /// Indicates whether syncing is allowed.
        public let allowSync: Bool
        /// URL for the background artwork of the media container.
        public let art: String
        /// An plugin identifier for the media container.
        public let identifier: String
        /// The prefix used for media tag resource paths.
        public let mediaTagPrefix: String
        /// The version number for media tags.
        public let mediaTagVersion: Int
        /// Specifies whether caching is disabled.
        public let nocache: Bool
        /// Number of media items returned in this response.
        public let size: Int
        /// URL for the thumbnail image of the media container.
        public let thumb: String
        /// The primary title of the media container.
        public let title1: String
        /// The secondary title of the media container.
        public let title2: String
        /// Identifier for the view group layout.
        public let viewGroup: String
        /// Identifier for the view mode.
        public let viewMode: String
        /// An array of actor entries for media items.
        public let directory: [Operations.GetActorsLibraryDirectory]?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter allowSync: Indicates whether syncing is allowed.
        /// - Parameter art: URL for the background artwork of the media container.
        /// - Parameter identifier: An plugin identifier for the media container.
        /// - Parameter mediaTagPrefix: The prefix used for media tag resource paths.
        /// - Parameter mediaTagVersion: The version number for media tags.
        /// - Parameter nocache: Specifies whether caching is disabled.
        /// - Parameter size: Number of media items returned in this response.
        /// - Parameter thumb: URL for the thumbnail image of the media container.
        /// - Parameter title1: The primary title of the media container.
        /// - Parameter title2: The secondary title of the media container.
        /// - Parameter viewGroup: Identifier for the view group layout.
        /// - Parameter viewMode: Identifier for the view mode.
        /// - Parameter directory: An array of actor entries for media items.
        ///
        public init(allowSync: Bool, art: String, identifier: String, mediaTagPrefix: String, mediaTagVersion: Int, nocache: Bool, size: Int, thumb: String, title1: String, title2: String, viewGroup: String, viewMode: String, directory: [Operations.GetActorsLibraryDirectory]? = nil) {
            self.allowSync = allowSync
            self.art = art
            self.identifier = identifier
            self.mediaTagPrefix = mediaTagPrefix
            self.mediaTagVersion = mediaTagVersion
            self.nocache = nocache
            self.size = size
            self.thumb = thumb
            self.title1 = title1
            self.title2 = title2
            self.viewGroup = viewGroup
            self.viewMode = viewMode
            self.directory = directory
        }
    }}

extension Operations.GetActorsLibraryMediaContainer: Codable {
    enum CodingKeys: String, CodingKey {
        case allowSync
        case art
        case identifier
        case mediaTagPrefix
        case mediaTagVersion
        case nocache
        case size
        case thumb
        case title1
        case title2
        case viewGroup
        case viewMode
        case directory = "Directory"
    }
}

