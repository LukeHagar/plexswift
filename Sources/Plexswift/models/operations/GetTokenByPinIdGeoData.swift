// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// Geo location data
    public struct GetTokenByPinIdGeoData {
        /// The name of the city.
        public let city: String
        /// The ISO 3166-1 alpha-2 code of the country.
        public let code: String
        /// The continent code where the country is located.
        public let continentCode: String
        /// The geographical coordinates (latitude, longitude) of the location.
        public let coordinates: String
        /// The official name of the country.
        public let country: String
        /// Indicates if the country is a member of the European Union.
        public let europeanUnionMember: Bool
        /// Indicates if the country has privacy restrictions.
        public let inPrivacyRestrictedCountry: Bool
        /// Indicates if the region has privacy restrictions.
        public let inPrivacyRestrictedRegion: Bool
        /// The postal code of the location.
        public let postalCode: String
        /// The name of the primary administrative subdivision.
        public let subdivisions: String
        /// The time zone of the country.
        public let timeZone: String

        /// Creates an object with the specified parameters
        ///
        /// - Parameter city: The name of the city.
        /// - Parameter code: The ISO 3166-1 alpha-2 code of the country.
        /// - Parameter continentCode: The continent code where the country is located.
        /// - Parameter coordinates: The geographical coordinates (latitude, longitude) of the location.
        /// - Parameter country: The official name of the country.
        /// - Parameter europeanUnionMember: Indicates if the country is a member of the European Union.
        /// - Parameter inPrivacyRestrictedCountry: Indicates if the country has privacy restrictions.
        /// - Parameter inPrivacyRestrictedRegion: Indicates if the region has privacy restrictions.
        /// - Parameter postalCode: The postal code of the location.
        /// - Parameter subdivisions: The name of the primary administrative subdivision.
        /// - Parameter timeZone: The time zone of the country.
        ///
        public init(city: String, code: String, continentCode: String, coordinates: String, country: String, europeanUnionMember: Bool, inPrivacyRestrictedCountry: Bool, inPrivacyRestrictedRegion: Bool, postalCode: String, subdivisions: String, timeZone: String) {
            self.city = city
            self.code = code
            self.continentCode = continentCode
            self.coordinates = coordinates
            self.country = country
            self.europeanUnionMember = europeanUnionMember
            self.inPrivacyRestrictedCountry = inPrivacyRestrictedCountry
            self.inPrivacyRestrictedRegion = inPrivacyRestrictedRegion
            self.postalCode = postalCode
            self.subdivisions = subdivisions
            self.timeZone = timeZone
        }
    }}

extension Operations.GetTokenByPinIdGeoData: Codable {
    enum CodingKeys: String, CodingKey {
        case city
        case code
        case continentCode = "continent_code"
        case coordinates
        case country
        case europeanUnionMember = "european_union_member"
        case inPrivacyRestrictedCountry = "in_privacy_restricted_country"
        case inPrivacyRestrictedRegion = "in_privacy_restricted_region"
        case postalCode = "postal_code"
        case subdivisions
        case timeZone = "time_zone"
    }
}

