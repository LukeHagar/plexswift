// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct Producer {
        /// The filter string used to query this producer.
        public let filter: String
        /// Unique identifier for the producer.
        public let id: Int
        /// The name of the producer
        public let tag: String
        /// A unique key associated with the producer's tag, used for internal identification.
        public let tagKey: String?
        /// The URL of the thumbnail image for the actor.
        public let thumb: String?

        /// Creates an object with the specified parameters
        ///
        /// - Parameter filter: The filter string used to query this producer.
        /// - Parameter id: Unique identifier for the producer.
        /// - Parameter tag: The name of the producer
        /// - Parameter tagKey: A unique key associated with the producer's tag, used for internal identification.
        /// - Parameter thumb: The URL of the thumbnail image for the actor.
        ///
        public init(filter: String, id: Int, tag: String, tagKey: String? = nil, thumb: String? = nil) {
            self.filter = filter
            self.id = id
            self.tag = tag
            self.tagKey = tagKey
            self.thumb = thumb
        }
    }}

extension Operations.Producer: Codable {
    enum CodingKeys: String, CodingKey {
        case filter
        case id
        case tag
        case tagKey
        case thumb
    }
}

