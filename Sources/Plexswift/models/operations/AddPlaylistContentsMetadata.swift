// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct AddPlaylistContentsMetadata {
        public let addedAt: Int?
        public let composite: String?
        public let duration: Int?
        public let guid: String?
        public let key: String?
        public let leafCount: Int?
        public let playlistType: String?
        public let ratingKey: String?
        public let smart: Bool?
        public let summary: String?
        public let title: String?
        public let type: String?
        public let updatedAt: Int?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(addedAt: Int? = nil, composite: String? = nil, duration: Int? = nil, guid: String? = nil, key: String? = nil, leafCount: Int? = nil, playlistType: String? = nil, ratingKey: String? = nil, smart: Bool? = nil, summary: String? = nil, title: String? = nil, type: String? = nil, updatedAt: Int? = nil) {
            self.addedAt = addedAt
            self.composite = composite
            self.duration = duration
            self.guid = guid
            self.key = key
            self.leafCount = leafCount
            self.playlistType = playlistType
            self.ratingKey = ratingKey
            self.smart = smart
            self.summary = summary
            self.title = title
            self.type = type
            self.updatedAt = updatedAt
        }
    }
}

extension Operations.AddPlaylistContentsMetadata: Codable {
    enum CodingKeys: String, CodingKey {
        case addedAt
        case composite
        case duration
        case guid
        case key
        case leafCount
        case playlistType
        case ratingKey
        case smart
        case summary
        case title
        case type
        case updatedAt
    }
}

