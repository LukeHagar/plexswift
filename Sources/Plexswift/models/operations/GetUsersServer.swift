// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetUsersServer {
        public let allLibraries: Operations.AllLibraries
        /// Unique ID of the server of the connected user
        public let id: Int
        public let lastSeenAt: Int
        /// Machine identifier of the Plex server.
        public let machineIdentifier: String
        /// Name of the Plex server of the connected user.
        public let name: String
        /// Number of libraries in the server this user has access to.
        public let numLibraries: Int
        public let owned: Operations.Owned
        public let pending: Operations.Pending
        /// ID of the actual Plex server.
        public let serverId: Int

        /// Creates an object with the specified parameters
        ///
        /// - Parameter id: Unique ID of the server of the connected user
        /// - Parameter machineIdentifier: Machine identifier of the Plex server.
        /// - Parameter name: Name of the Plex server of the connected user.
        /// - Parameter numLibraries: Number of libraries in the server this user has access to.
        /// - Parameter serverId: ID of the actual Plex server.
        ///
        public init(allLibraries: Operations.AllLibraries, id: Int, lastSeenAt: Int, machineIdentifier: String, name: String, numLibraries: Int, owned: Operations.Owned, pending: Operations.Pending, serverId: Int) {
            self.allLibraries = allLibraries
            self.id = id
            self.lastSeenAt = lastSeenAt
            self.machineIdentifier = machineIdentifier
            self.name = name
            self.numLibraries = numLibraries
            self.owned = owned
            self.pending = pending
            self.serverId = serverId
        }
    }}
