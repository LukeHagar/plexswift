// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

import Foundation

extension Operations {
    /// A model object
    public struct GetLibraryHubsHub {
        public let context: String?
        public let hubIdentifier: String?
        public let hubKey: String?
        public let key: String?
        public let metadata: [Operations.GetLibraryHubsMetadata]?
        public let more: Bool?
        public let promoted: Bool?
        public let random: Bool?
        public let size: Int?
        public let style: String?
        public let title: String?
        public let type: String?

        /// Creates an object with the specified parameters
        ///
        ///
        public init(context: String? = nil, hubIdentifier: String? = nil, hubKey: String? = nil, key: String? = nil, metadata: [Operations.GetLibraryHubsMetadata]? = nil, more: Bool? = nil, promoted: Bool? = nil, random: Bool? = nil, size: Int? = nil, style: String? = nil, title: String? = nil, type: String? = nil) {
            self.context = context
            self.hubIdentifier = hubIdentifier
            self.hubKey = hubKey
            self.key = key
            self.metadata = metadata
            self.more = more
            self.promoted = promoted
            self.random = random
            self.size = size
            self.style = style
            self.title = title
            self.type = type
        }
    }}

extension Operations.GetLibraryHubsHub: Codable {
    enum CodingKeys: String, CodingKey {
        case context
        case hubIdentifier
        case hubKey
        case key
        case metadata = "Metadata"
        case more
        case promoted
        case random
        case size
        case style
        case title
        case type
    }
}

